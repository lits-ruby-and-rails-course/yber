script src="//maps.google.com/maps/api/js?v=3.18&sensor=false&client=&key=&libraries=geometry&language=&hl=&region=" 
script src="//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js" 
script src="//google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js" type="text/javascript" 
/! only if you need custom infoboxes
br/
h1 show_map
div style=("width: 800px;") 
  #map style=("width: 800px; height: 400px;")
input#field_from name="from" type="text" value="#{@marker[:infowindow]}"
input#field_to name="to" type="text" value=""
button#plan_route disabled="disabled" type="button"  Plan Route
javascript:
  document.getElementById("plan_route").disabled = true; //hmm Ask about disable
  var directionsDisplay = new google.maps.DirectionsRenderer();
  var directionsService = new google.maps.DirectionsService();
  var location_json = #{raw @marker.to_json};
  var map_options = #{ raw @opt.to_json };
  var m_to;
  var m_from;
  function calcRoute(m_from, m_to) {
    var origin      = new google.maps.LatLng(m_from.serviceObject.position.G, m_from.serviceObject.position.K);
    var destination = new google.maps.LatLng(m_to.serviceObject.position.G, m_to.serviceObject.position.K);
    var request = {
        origin:      origin,
        destination: destination,
        travelMode:  google.maps.TravelMode.DRIVING
    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
      }
    });
  }
  handler = Gmaps.build('Google');
  handler.buildMap({ 
  	provider: {}, 
  	internal: {id: 'map'}},
  	function(){
    m_from = handler.addMarker(location_json, {draggable: true});
    handler.bounds.extendWith(m_from);
    handler.getMap().setZoom(map_options.zoom);
    handler.getMap().setCenter(new google.maps.LatLng(map_options.c_lat, map_options.c_lng));
  });
  google.maps.event.addListener(handler.getMap(), 'click', function(event) {
    var obj = { lat: event.latLng.G, lng: event.latLng.K };
    if (m_to) {
      handler.removeMarker(m_to)
      directionsDisplay.setDirections({routes: []});
    }
    m_to = handler.addMarker(obj, {draggable: true});
    document.getElementById("plan_route").disabled = false; 
    handler.bounds.extendWith(m_to);
    console.log(m_to.serviceObject.position.G);
  });
  document.getElementById("plan_route").addEventListener("click", function(){
    calcRoute(m_from, m_to);
    directionsDisplay.setMap(handler.getMap());
    directionsDisplay.setOptions({ polylineOptions: {
            strokeWeight: 6,
            strokeOpacity: 0.6,
            strokeColor:  'green' 
        }, suppressMarkers:true });
  });

